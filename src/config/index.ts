import path from 'path'

import Conf from 'conf'
import yaml from 'js-yaml'
import moment from 'moment'
import random from 'crypto-random-string'

import schema from './schema'

const config = new Conf({
    projectSuffix: '',
    cwd: process.cwd(),
    configName: '.hrasvaka',
    schema: schema,
    fileExtension: 'yml',
    clearInvalidConfig: true,
    serialize: (data: any): string => {
        return `# Run control for hrasvaka API.\n# Last modified on ${moment().format(
            'Do MMMM, YYYY ',
        )}at${moment().format(
            ' h:mm:ss A',
        )}\n# This file is automatically generated and should not be edited.\n# Unless you know what you are doing!\n\n`.concat(
            yaml.safeDump(data, {
                indent: 4,
            }),
        )
    },
    deserialize: yaml.safeLoad,
})

// as we internally use mysql2 instead of mysql
// if the user unknowingly puts mysql
// we silently change it to mysql2
if (config.get('database.client') == 'mysql') {
    config.set('database.client', 'mysql2')
}

// if the user didn't specify a port
// we set it to the default port according to the database
// adapter specified
if (!config.get('database.connection.port')) {
    if (config.get('database.client') == 'mysql2') {
        config.set('database.connection.port', 3306)
    } else if (config.get('database.client') == 'pg') {
        config.set('database.connection.port', 5432)
    }
}

// generate the privateSecret incase it isn't there
if (!config.get('privateSecret'))
    config.set('privateSecret', random({ length: 64, type: 'url-safe' }))

export default config
